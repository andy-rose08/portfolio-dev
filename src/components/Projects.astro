---
import Flask from '../components/icons/Flask.astro';
import Tailwind from '../components/icons/Tailwind.astro';
import OpenWeather from '../components/icons/OpenWeather.astro';
import Python from '../components/icons/Python.astro';
import Nextjs from '../components/icons/Nextjs.astro'
import MongoDB from '../components/icons/MongoDB.astro';
import Stripe from '../components/icons/Stripe.astro';
import PayloadCMS from '../components/icons/PayloadCMS.astro';
import GitHub from './icons/GitHub.astro';

import Video from './icons/Video.astro';


const TAGS = {
  FLASK:{
    name:'Flask',
    class: 'bg-gray-500 text-white',
    icon: Flask
  },
  PYTHON:{
    name:'Python',
    class: 'bg-yellow-300 text-white',
    icon: Python
  },
  TAILWIND:{
    name:'Tailwindcss',
    class: 'bg-sky-300 text-white',
    icon: Tailwind
  },
  OPENWEATHERAPI:{
    name:'Open Weather API',
    class: 'bg-orange-300 text-white',
    icon: OpenWeather
  },
  NEXTJS:{
    name:'Nextjs',
    class:'bg-black-600 text-white',
    icon:Nextjs
  },
  MONGODB:{
    name:'MongoDB',
    class:'bg-green-300 text-white',
    icon:MongoDB
  },
  STRIPE:{
    name:'Stripe',
    class:'bg-purple-600 text-white',
    icon:Stripe
  },
  PAYLOADCMS:{
    name:'Payload CMS',
    class:'bg-black-600 text-white',
    icon:PayloadCMS
  }
}

const PROJECTS = [
  {
    title: 'Weather Flask App',
    link:"https://python-flask-weather-app.vercel.app/",
    github:"https://github.com/andy-rose08/python_flask_weather_app",
    description: 'A simple static page developed in python with flask and tailwindcss for styling, also it uses Open Weather API to catch the weather in any city in the world. Also provides a Forecast if the user wants it.',
    image: '/img/weatherflask.png',
    tags:[TAGS.FLASK,TAGS.PYTHON, TAGS.TAILWIND, TAGS.OPENWEATHERAPI],
    video:'/video/production_id 5198164 (2160p).mp4',
  },
  {
    title: 'E-Commerce TECH HAVEN',
    link:"https://e-commerce-portfolio.payloadcms.app/",
    github:"https://github.com/andy-rose08/e-commerce",
    description: 'A comprehensive e-commerce website developed with help of the Payload-CMS service, it uses Nextjs for the frontend and MongoDB for the database, also it uses Stripe for the payment gateway. It has a complete admin panel to manage the products and orders. The website is fully responsive and has a great user experience, but the link may not work, because it is a paid service and I am not currently paying for it.',
    image: '/img/techhaven.png',
    tags:[TAGS.NEXTJS, TAGS.MONGODB, TAGS.STRIPE, TAGS.PAYLOADCMS],
    video:'/video/production_id 5198164 (2160p).mp4',
  },
]
---

{
  PROJECTS.map(({ image, link, title, description, tags, github, video }, index) => (
    <article key={index} x-data="{ open: false }">
      <h3 class="text-xl font-bold mb-2 mt-4 text-cyan-400">
        <a href={link} target="_blank" rel="noopener noreferrer">{title}</a>
      </h3>
      <p class="text-lg mb-4 text-pretty text-white">{description}</p>
      <div class="flex flex-col lg:flex-row gap-y-4 lg:gap-x-4">
        <ul class="flex flex-wrap gap-x-4 flex-row">
          Technologies used: {tags.map((tag, tagIndex) => (
            <li key={tagIndex}>
              <span class={`flex gap-x-2 rounded-full text-sm ${tag.class} py-1 px-2`}>
                <tag.icon class="size-4" /> 
                {tag.name}
              </span>
            </li>
          ))}
        </ul>
      </div>
      <a href={link} target="_blank" rel="noopener noreferrer">
        <img 
          class="rounded shadow-2xl shadow-cyan-500/50 w-full h-auto object-cover mt-4"
          src={image} alt={`Screenshot of the project ${title}`}
        />
      </a>
      <div class="flex justify-between items-center mt-4"> 
        <a class="flex items-center text-cyan-500 hover:text-cyan-600" href={github} target="_blank" rel="noopener noreferrer">
          <GitHub class="size-4 mx-2" />Access the repository here! ðŸ˜Š
        </a>
        <button class="modal-open-button flex items-center text-purple-500 hover:text-purple-600" data-index={index}>
          <Video class="size-4 mx-2" />Watch the project video here! ðŸŽ¥
        </button>
      </div>
      <!-- Modal -->
<div id={`myModal${index}`} class="modal hidden fixed inset-0 z-10 overflow-y-auto bg-black bg-opacity-80 p-5" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="flex items-center justify-center min-h-screen">
    <div class="inline-block align-bottom bg-gray-900 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full shadow-cyan-500/50">
      <!-- Modal header -->
      <div class="flex justify-between items-center border-b border-gray-700 p-3">
        <h5 class="text-xl font-bold text-white">{title}</h5>
        <button type="button" class="modal-close-button text-gray-300 hover:text-gray-100">
          &times;
        </button>
      </div>
      <!-- Video player -->
      <div class="px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
            <video width="100%" height="auto" controls class="rounded shadow-lg shadow-cyan-500/50">
              <source src={video} type="video/mp4" />
              Your browser does not support the video tag.
            </video>
          </div>
        </div>
      </div>
      <!-- Modal footer -->
      <div class="bg-gray-800 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button type="button" class="modal-close-button w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-purple-600 text-base font-medium text-white hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm">
          Close
        </button>
      </div>
    </div>
  </div>
</div>

    </article>
  ))
}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.modal-open-button').forEach(button => {
      button.addEventListener('click', function() {
        const index = this.getAttribute('data-index');
        document.getElementById(`myModal${index}`).classList.remove('hidden');
      });
    });

    // Since the close buttons might not exist when this script first runs, ensure this part of the script runs after the DOM is fully loaded
    document.addEventListener('click', function(event) {
      if (event.target.matches('.modal-close-button')) {
        // Find the closest parent modal to close
        event.target.closest('.modal').classList.add('hidden');
      }
    });
  });
</script>




